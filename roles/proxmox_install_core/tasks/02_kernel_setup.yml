---
# https://pve.proxmox.com/wiki/Install_Proxmox_VE_on_Debian_13_Trixie

- name: create /etc/apt/sources.list.d/pve-install-repo.sources
  ansible.builtin.blockinfile:
    path: /etc/apt/sources.list.d/pve-install-repo.sources
    create: yes
    mode: '0644'
    owner: root
    group: root
    block: |
      Types: deb
      URIs: http://download.proxmox.com/debian/pve
      Suites: trixie
      Components: pve-no-subscription
      Signed-By: /usr/share/keyrings/proxmox-archive-keyring.gpg
      Architechtures: amd64

- name: install proxmox gpg key
  shell: |
    wget https://enterprise.proxmox.com/debian/proxmox-archive-keyring-trixie.gpg -O /usr/share/keyrings/proxmox-archive-keyring.gpg
    apt modernize-sources --assume-yes || true
  args:
    executable: /bin/bash

- name: apt update && apt full-upgrade
  shell: |
    apt update && apt full-upgrade -y
  args:
    executable: /bin/bash

- name: install pve-kernel
  shell: |
    export DEBIAN_FRONTEND=noninteractive
    apt install ssl-cert proxmox-default-kernel -y -o DPkg::options::="--force-overwrite"
    #apt install ssl-cert proxmox-kernel-6.5 -y -o DPkg::options::="--force-overwrite"

    # chat gpt crap
    BOOT_DISK=$(grub-probe --target=disk /boot)
    debconf-set-selections <<< "grub-pc grub-pc/install_devices multiselect $BOOT_DISK"
    debconf-set-selections <<< "grub-pc grub-pc/install_devices_empty boolean false"

    update-grub
  args:
    executable: /bin/bash

# - name: reboot (default)
#   ansible.builtin.reboot:
#     reboot_timeout: 3600
#   when: not proxmox_install_core_reboot_force

- name: Reboot the server
  tags: reboot
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  when: not proxmox_install_core_reboot_force

- name: reboot (force)
  shell: |
    sleep 5 && reboot -f
  args:
    executable: /bin/bash
  async: 1
  poll: 0
  when: proxmox_install_core_reboot_force

- name: pause for 10 seconds (force)
  ansible.builtin.pause:
    seconds: 10
  when: proxmox_install_core_reboot_force

- name: wait for ssh to become available again
  connection: local
  become: false
  ansible.builtin.wait_for:
    host: "{{ inventory_hostname }}"
    port: 22
    delay: 10

- name: pause for 10 seconds (force)
  ansible.builtin.pause:
    seconds: 10

- name: Check the Uptime of the servers
  shell: "uptime"
  register: Uptime

- debug: var=Uptime
